# manual steps
# sudo curl -L -o /etc/yum.repos.d/gh-cli.repo https://cli.github.com/packages/rpm/gh-cli.repo
# sudo dnf install gh -y
# gh auth login
# gh auth refresh -h github.com -s admin:org

- name: set prompt
  ansible.builtin.shell: set-prompt github-runner

- name: add github runner user
  ansible.builtin.user:
    name: grunner


- name: create github directory
  ansible.builtin.file:
    path: /actions-runner
    state: directory
    owner: grunner
    group: grunner

- name: download and extract runner
  ansible.builtin.unarchive:
    src: https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-linux-x64-2.317.0.tar.gz
    dest: "/actions-runner"
    remote_src: yes
    owner: grunner
    group: grunner

- name: grab token
  ansible.builtin.shell: |
   gh api --method POST  -H "Accept: application/vnd.github+json"  -H "X-GitHub-Api-Version: 2022-11-28" /orgs/Amruthad80/actions/runners/registration-token | jq .token
  register: token
  become_user: ec2-user #token can be fetched by ec2-user as gh login was done by that user


- name: install libicu dependency
  ansible.builtin.dnf:
    name: libicu
    state: latest

- name: get the runner count
  ansible.builtin.shell: |
    gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/Amruthad80/actions/runners | jq .total_count |xargs
  register: runner_count
  become_user: ec2-user

- name: get the runner status
  ansible.builtin.shell: |
    gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/Amruthad80/actions/runners |jq '.runners[] | select(.name == "ec2") | .status' |xargs
  register: runner_status
  become_user: ec2-user

- name: debug
  debug:
    msg: "{{ runner_count.stdout }}"
    


- name: configure github runner
  ansible.builtin.shell: ./config.sh --url https://github.com/Amruthad80 --token {{ token.stdout }}  --runnergroup Default --name ec2 --labels rhel --work _work --replace
  args:
    chdir: /actions-runner
  become_user: grunner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: update path file
  ansible.builtin.file:
    src: path
    dest: /actions-runner/.path
  become_user: grunner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: install runner service
  ansible.builtin.shell: ./svc.sh install grunner ; ./svc.sh start
  args:
    chdir: /actions-runner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: download terraform repo files
  ansible.builtin.get_url:
    url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
    dest: /etc/yum.repos.d/hashicorp.repo

- name: install terraform
  ansible.builtin.dnf:
    name: terraform
    state: latest

- name: install ansible
  ansible.builtin.shell: pip-3.11 install ansible

